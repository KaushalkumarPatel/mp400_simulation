<launch>

	<arg name="paused" default="false" />
	<arg name="use_sim_time" default="true" />
	<arg name="gui" default="true" />
	<arg name="headless" default="false" />
	<arg name="debug" default="false" />
	<arg name="model" default="$(find mp400_simulation)/urdf/robot_simulation.xacro"/>
	<!--arg name="rvizconfig" default="$(find mp400_simulation)/rviz/mp400_urdf.rviz" />-->

	<include file="$(find gazebo_ros)/launch/empty_world.launch">

		<arg name="debug" value="$(arg debug)" />
		<arg name="gui" value="$(arg gui)" />
		<arg name="paused" value="$(arg paused)" />
		<arg name="use_sim_time" value="$(arg use_sim_time)" />
		<arg name="headless" value="$(arg headless)" />

	</include>

<!-- Load the URDF into the ROS Parameter Server -->
  <param name="robot_description" command="$(find xacro)/xacro.py '$(find mp400_simulation)/urdf/robot_simulation.xacro'"/>
	<param name="use_gui" value="$(arg gui)"/>

	<node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" />

	 <!-- convert joint states to TF transforms for rviz, etc -->
	<node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher"
	    respawn="false" output="screen">
		<remap from="/joint_states" to="/robot/joint_states" />
	</node>

<!-- Load joint controller configurations from YAML file to parameter server -->
	<rosparam file="$(find mp400_simulation)/config/schunk_arm_controller.yaml" command="load"/>

<!-- Load the controllers -->
	<node name="controller_spawner" pkg="controller_manager" type="spawner" respawn="false"
    output="screen" ns="/robot"  args="joint_state_controller
																			 joint_trajectory_controller
																			 joint_group_position_controller
																			 joint_group_interpol_position_controller
																			 arm_1_joint_position_controller
																			 arm_2_joint_position_controller
																			 arm_3_joint_position_controller
																			 arm_4_joint_position_controller
																			 arm_5_joint_position_controller
																			 arm_6_joint_position_controller">
	</node>

<!-- Run a python script to the send a service call to gazebo_ros to spawn
	a URDF robot -->
	<node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model"
		respawn="false" output="screen" args="-urdf -model robot -param robot_description"/>

</launch>
